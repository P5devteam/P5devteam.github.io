(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{115:function(e,a,o){"use strict";o.r(a),o.d(a,"frontMatter",(function(){return s})),o.d(a,"metadata",(function(){return l})),o.d(a,"rightToc",(function(){return c})),o.d(a,"default",(function(){return u}));var n=o(1),r=o(6),t=(o(0),o(123)),s={id:"dao",title:"DAO",sidebar_label:"DAO"},l={id:"dao",title:"DAO",description:"La estructura de la API que hicimos para OVloop la estructur\xf3 Juani y es algo as\xed:",source:"@site/docs/dao.md",permalink:"/docs/dao",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dao.md",sidebar_label:"DAO",sidebar:"someSidebar",previous:{title:"Amazon Relational Database Service",permalink:"/docs/RDS"}},c=[{value:"Folder structure",id:"folder-structure",children:[]},{value:"CONTROLADOR:",id:"controlador",children:[]},{value:"MODELO:",id:"modelo",children:[]},{value:"OTRAS OBSERVACIONES:",id:"otras-observaciones",children:[{value:"PREGUNTAS PARA JUANI:",id:"preguntas-para-juani",children:[]}]}],i={rightToc:c};function u(e){var a=e.components,o=Object(r.a)(e,["components"]);return Object(t.b)("wrapper",Object(n.a)({},i,o,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,"La estructura de la API que hicimos para OVloop la estructur\xf3 Juani y es algo as\xed:"),Object(t.b)("h2",{id:"folder-structure"},"Folder structure"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"SRC",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"CONTROLLERS"),Object(t.b)("li",{parentName:"ul"},"DAOS"),Object(t.b)("li",{parentName:"ul"},"DBMODELS"),Object(t.b)("li",{parentName:"ul"},"MODELS"),Object(t.b)("li",{parentName:"ul"},"PUBLIC"),Object(t.b)("li",{parentName:"ul"},"ROUTES"),Object(t.b)("li",{parentName:"ul"},"index.js"),Object(t.b)("li",{parentName:"ul"},"package.json"),Object(t.b)("li",{parentName:"ul"},"Dockerfile"),Object(t.b)("li",{parentName:"ul"},"Cualquier archivo de config")))),Object(t.b)("p",null,"La papa est\xe1 dentro de ",Object(t.b)("inlineCode",{parentName:"p"},"src")," cuando entra un request http o del tipo que sea, el flow funciona de la siguiente manera:\nREQ====>ruta===>controlador===>modelo===>DAO---\x3emodelo----\x3econtrolador---\x3eRES"),Object(t.b)("h2",{id:"controlador"},"CONTROLADOR:"),Object(t.b)("p",null,"Son funciones que reciben req, res y opconalmente next como par\xe1metros, osea que son llamadas directamente por el router. En esta parte se debe chequear que el pedido tenga toda la informaci\xf3n necesaria para poder procesarlo correctamente; esto es que el req.body exista y tenga todos los campos obligatorios y con el tipo de dato requerido, guardar los req.params y campos del req.body en variables."),Object(t.b)("p",null,"Si est\xe1 todo OK, se llama a algun m\xe9todo del modelo con toda la data obtenida. En caso contrario, se env\xeda una respuesta con el status code y un mensaje acorde. Lo mismo sucede al obtener la respuesta del modelo."),Object(t.b)("h2",{id:"modelo"},"MODELO:"),Object(t.b)("p",null,'Es la parte encargada de "armar" los modelos/estructuras que va a utilizar el dao. EJ: Armar un objeto con todos los campos necesarios para que el dao cree una instacia en la DB. La data para el objeto se recibe como par\xe1metro (lo pasa el controlador), pero si es necesario agregar alg\xfan campo como puede ser generar un UUID o una fecha, se hace en esta parte del flow.\nOTRO EJ: Se arma unn objeto filtro para que el dao ejecute una query seg\xfan los campos que se reciban desde el controlador.\nEl modelo retorna lo que retorna el dao o directamente devuelve alg\xfan m\xe9todo del dao ejecutado con la estructura armada.\nDAO (Data Access Object):\nEs el paso encargado de comunicarse con la DB o ejecutar el fin \xfaltimo del request. Es importante por cuestiones de exposici\xf3n y seguridad que solo el dao sea quien tenga accesso a la info almacenada en la DB.\nSi la idea del request no era comunicarse con una DB sino por ejemplo mandar un mail, se hace en esta instancia y en los pasos anteriores se procesa toda la data y se arma el mail que se va a enviar. En este paso SOLO se env\xeda el mail.\nUna vez obtenida una respuesta, se retorna.'),Object(t.b)("h2",{id:"otras-observaciones"},"OTRAS OBSERVACIONES:"),Object(t.b)("p",null,"Cada paso exporta una sola clase que lleva el nombre del paso precedido por el modelo de la base de datos al que afecta. Si el modelo de la base de datos se llama Users, los archivos y las clases dentro de cada archivo se llaman UsersController.js, UsersModel.js y UsersDAO.js y UsersController, UsersModel y UsersDAO respectivamente.\nCada clase tiene m\xe9todos que llevana cabo las distintas validaciones o arman los distintos objetos o le pegan a la db seg\xfan sea requerido.\nAdem\xe1s, cada paso es imprescindible. Por ejemplo, si en el modelo no es necesario armar nada, igual act\xfaa como intermediario a pesar de que lo \xfanico que haga es llamar al dao. El controlador NO llama al DAO!\nAc\xe1 un mini ejemplo bien acotado en el que el model est\xe1 al re pedo:"),Object(t.b)("pre",null,Object(t.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// Controller:\nclass MessagesController {\n  static async getSingleMessage(req, res) {\n    const requestId = req.params.requestId;\n    const result = await MessagesModel.getSingleMessage(requestId);\n    if (result == null) res.status(400);\n    else res.status(200).send(result);\n  }\n}\n// Model:\nclass MessagesModel {\n  static async getSingleMessage(requestId) {\n    return MessageDao.getSingleMessage(requestId);\n  }\n}\n// Dao:\nclass MessagesDao {\n  static getSingleMessage(requestId) {\n    return Message.findOne({ requestId }).then(message => {\n      return message;\n    });\n  }\n}\n")),Object(t.b)("p",null,"Esto obviamente es lo que vi en base al proyecto e investigando que era un dao. No encontr\xe9 en ning\xfan lado que una api se organice de este modo (controller, model, dao). Vi que se usan controladores y daos en todos lados pero la parte de model no. Algunos a este paso intermedio lo llaman service pero hace otras cosas. Otros directamente lo omiten."),Object(t.b)("h3",{id:"preguntas-para-juani"},"PREGUNTAS PARA JUANI:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"Se que en el proyecto, si el dao ejecutaba una accion que no era comunicarse con la db (mandaba un mensaje), igual se hac\xeda en esta instancia. \xbfSe hace as\xed realmente? Porque en lo que estuve investigando el dao es como una suerte de capa para comunicarse espec\xedficamente con alg\xfan servicio que almacene info y no creo que una acci\xf3n que env\xede un mensaje sea algo de ese estilo.")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"La respuesta del dao, por lo que vi, es la data cruda de la base de datos. Si quiero darle forma a la respuesta y elegir que info enviar, tengo dos opciones, formatear la respuesta o directamente hacer una query que me traiga \xfanicamente los campos necesarios. \xbfCu\xe1l es la mejor opci\xf3n?")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"Hay veces que de todos modos se necesita realizar alguna acci\xf3n con la info obtenida del dao entes de enviarla. Ah\xed no puedo escapar a formatear mi respuesta. \xbfEso lo hago en el modelo?")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"Otra inquietud es con respecto la rigidez del flow (controlador===>modelo===>DAO---\x3emodelo----\x3econtrolador---\x3eRESPUESTA). Me es muy facil imaginarme casos en los que el controlador necesite llamar a m\xe1s de un m\xe9todo de modelo o el modelo a m\xe1s de un m\xe9todo del dao, etc. Supongo que no est\xe1 mal que as\xed sea pero entiendo que se pierde un poco el fin de hacer el recorrido lo m\xe1s simple posible. Tambi\xe9n se me ocurre que muchas de estas idas y vueltas se solucionar\xedan si alguno de los pasos pudiera manejar alguna l\xf3gica que no deber\xeda. Entonces \xbfCu\xe1l es la mejor opci\xf3n? \xbfSe respeta el flow o se respetan las funcionalidades de cada paso del flow? Entiendo que es una pregunta muy abarcativa y que habr\xeda que contemplar cada caso pero ya que Juani la tiene clara se le puede pedir una sugerencia general."))))}u.isMDXComponent=!0},123:function(e,a,o){"use strict";o.d(a,"a",(function(){return d})),o.d(a,"b",(function(){return b}));var n=o(0),r=o.n(n);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function s(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?s(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function c(e,a){if(null==e)return{};var o,n,r=function(e,a){if(null==e)return{};var o,n,r={},t=Object.keys(e);for(n=0;n<t.length;n++)o=t[n],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)o=t[n],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=r.a.createContext({}),u=function(e){var a=r.a.useContext(i),o=a;return e&&(o="function"==typeof e?e(a):l({},a,{},e)),o},d=function(e){var a=u(e.components);return r.a.createElement(i.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},m=Object(n.forwardRef)((function(e,a){var o=e.components,n=e.mdxType,t=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=u(o),m=n,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||t;return o?r.a.createElement(b,l({ref:a},i,{components:o})):r.a.createElement(b,l({ref:a},i))}));function b(e,a){var o=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var t=o.length,s=new Array(t);s[0]=m;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var i=2;i<t;i++)s[i]=o[i];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,o)}m.displayName="MDXCreateElement"}}]);