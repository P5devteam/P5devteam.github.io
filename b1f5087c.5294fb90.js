(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{109:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return t})),n.d(a,"metadata",(function(){return l})),n.d(a,"rightToc",(function(){return i})),n.d(a,"default",(function(){return u}));var o=n(1),r=n(6),s=(n(0),n(123)),t={id:"lambda",title:"Lambda Service",sidebar_label:"lambda"},l={id:"lambda",title:"Lambda Service",description:"## Investigaci\xf3n de lambdas aplicado a mailing (Santi)",source:"@site/docs/lambda.md",permalink:"/docs/lambda",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/lambda.md",sidebar_label:"lambda",sidebar:"someSidebar",previous:{title:"AWS services",permalink:"/docs/aws"},next:{title:"Simple Storage Service (S3)",permalink:"/docs/S3"}},i=[{value:"Investigaci\xf3n de lambdas aplicado a mailing (Santi)",id:"investigaci\xf3n-de-lambdas-aplicado-a-mailing-santi",children:[]},{value:"Primer aproach",id:"primer-aproach",children:[]},{value:"Serverless framework",id:"serverless-framework",children:[]},{value:"Segundo aproach",id:"segundo-aproach",children:[]}],c={rightToc:i};function u(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},c,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"investigaci\xf3n-de-lambdas-aplicado-a-mailing-santi"},"Investigaci\xf3n de lambdas aplicado a mailing (Santi)"),Object(s.b)("p",null,"Bueno, ac\xe1 les resumo un poco lo que hice con las Lambda de AWS para el servicio de mailing."),Object(s.b)("h2",{id:"primer-aproach"},"Primer aproach"),Object(s.b)("p",null,'AWS te permite hacer todo "manualmente" desde la p\xe1gina. Ah\xed podes poner el nuevo c\xf3digo de la funci\xf3n, configurar el entorno de desarrollo, etc. Peeero a mi parecer, para el usuario inexperto, el flow de la p\xe1gina es confuso.\nPara hacer el deploy de una lambda podes escribir el c\xf3digo en el editor de la p\xe1gina o subir un .zip. Hay un mont\xf3n de blueprints que podes usar de AWS para no tener que escribir tanto. Si todo el c\xf3digo pesa m\xe1s de 250 MB lo ten\xe9s que subir si o si a un S3 (con toda la config que eso implica). Adem\xe1s, una vez que lo subiste, tenes que agregar los triggers, es decir, cuando se va a llamar a la funci\xf3n. Estos pueden ser distintos eventos de servicios de AWS (p.e de un S3 o de dynamoDB) o HTTP.\nComo lo que nosotros queremos son HTTP, hay que configurar los endpoints con distintas API gateways que apunten a la lambda.\nEsto todav\xeda no se como hacerlo directamente desde el sitio de AWS pero es lo que voy a investigar en estos dias.'),Object(s.b)("h2",{id:"serverless-framework"},"Serverless framework"),Object(s.b)("p",null,'Por suerte encontre un framework que se llama "serverless framework" que ahorra muchos de los pasos manuales y te permite trabajar todo localmente, incluso hasta probar la funci\xf3n sin hacer el deploy. Una vez que est\xe1 todo listo se corren unos comandos en la consola y el framework solito se encarga de hacer el deploy, subir el codigo a un S3 bucket y dejar las funciones ya escuchando. RE CHETO!\nCon el framework ese es una pavada, incluso pod\xe9s subir dependencias y librer\xedas (mailgun en este caso) e ignora las devDependencies para el deploy.\nAc\xe1 lo que hice:\nPrimero que nada cree en aws un nuevo usuario y un nuevo grupo con permisos de administrador (no es que hice una nueva cuenta, est\xe1 dentro de p5) en la seccion IAM. Otro usuario que ya exist\xeda ah\xed es el de lumartex, por ejemplo. Creo que son como los roles de psql, ponele.\nBueno, entonces cree uno..\nEl Usuario se llama serverless-admin y el grupo serverless-group.\nDespues instale aws-cli y serverless framework globalmente: npm i -g aws-cli serverless\nConfigure las credenciales de aws: te pide las claves y adem\xe1s una default region en la que usamos sa-east-1 y un default output format, ponemos json.\nDespues configuramos serverless para aws:'),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"    sls config credentials --provider aws --key <Access Key> --secret <Secret Access Key> --profile <Nombre del Usuario>\n")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},'en la terminal los comandos de serverless se pueden poner comenzando con "serverless" o con "sls", es lo mismo')),Object(s.b)("p",null,"Joya, ya est\xe1 todo configurado. Ahora con un comando podemos crear un boilerplate de una lambda hecha en Nodejs:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"sls create --template aws-nodejs\n")),Object(s.b)("p",null,"Esto nos crea un ",Object(s.b)("inlineCode",{parentName:"p"},".gitignore"),", un ",Object(s.b)("inlineCode",{parentName:"p"},"handler.js")," y un ",Object(s.b)("inlineCode",{parentName:"p"},"serverless.yml"),", Las ultimas dos son las unicas dos cosas indispensables para que funque.\nEn el handler va la funcion, y el el yml la config. Ah\xed mismo podes definir los endpoints y que funci\xf3n se le asigna a cada uno, est\xe1 tremendo.\nPara testear las cosas offline hay que instalar serverless-offline con el flag -D as\xed despues es ignorado en el deploy.\nLes explicaria m\xe1s en detalle las configs pero son algunas cosas m\xe1s y creo que es mejor si lo quieren saber que nos juntemos y lo veamos.\nEn fin, con el comando sls deploy (y hay algunos flags que te permiten elegir el staging, la regi\xf3n, etc) sale con fritas y ya queda funcionando en AWS. Con sls remove las bajas y chau.\nPor ahora ya est\xe1n funcionando las dos rutas que tiene la vieja api de mailing pero sin el pipedrive. Si bien funcionan flama hay algunas cosas que le preguntar\xeda a juani en cuanto a la estructura de las lambdas:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"Conviene usar el serverless framework?")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"As\xed como est\xe1 diagramado, se suben todos los node_modules y archivos dentro del root directory: \xbfes mejor hacerlo con las layers que te provee aws o para un archivo tan liviano y simple no tiene sentido?")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"Son dos funciones, no hay ninguna estructura tipo controller>>>model>>>dao. Tiene sentido pq no hay ninguna DB involucrada todav\xeda, pero llegado al caso, cu\xe1l es la idea: \xbfHago todo dentro del export de cada handler? \xbfO divido y modularizo todo? Realmente no se que conviene con las lambda porque cuanto menor sea el runtime mejor, por lo menos econ\xf3micamente hablando jajajaj"),Object(s.b)("p",{parentName:"li"},"Ah, y bueno, ac\xe1 est\xe1n las rutas, las dos POST:\n",Object(s.b)("a",Object(o.a)({parentName:"p"},{href:"https://e4trp6her0.execute-api.us-east-1.amazonaws.com/dev/contacto"}),"https://e4trp6her0.execute-api.us-east-1.amazonaws.com/dev/contacto"),"\n",Object(s.b)("a",Object(o.a)({parentName:"p"},{href:"https://e4trp6her0.execute-api.us-east-1.amazonaws.com/dev/aplicar"}),"https://e4trp6her0.execute-api.us-east-1.amazonaws.com/dev/aplicar"),"\nEn el body tienen que tener si o si los campos consulta, nombre e email y la ruta de aplicar tambien el campo curso, que puede ser solamente intro o bootcamp en string."))),Object(s.b)("h2",{id:"segundo-aproach"},"Segundo aproach"),Object(s.b)("p",null,"Gueno, ac\xe1 va un update de mis indagaciones en AWS-lambda."),Object(s.b)("p",null,"Logr\xe9 hacer lo mismo que les hab\xeda comentado anteriormente con el serverless framework pero esta vez manualmente. Es bastante un quilombo entenderlo desde la documentaci\xf3n de AWS pero una vez que sale no es taaanto ni tan dificil.\nNo aprend\xed a usar la consola de AWS lambda pq son un mont\xf3n de comandos y se puede hacer lo mismo con la interfaz gr\xe1fica.\nDe nuevo, si les pinta que les muestre como hacerlo nosju un ratito y lo vemos.\nEn fin, ac\xe1 van algunos comentarios acerca de mis interacciones con la empresa de Jeff Bezos XD:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Para hacer la funci\xf3n hay un editor online que est\xe1 copado pq te deja crear carpetas y archivos y lo que quieras, funciona igual que si estuvieras en el editor de la compu. Si no se necesita trabajar con npm y la funci\xf3n es algo simple me parece una r\xe1pida y c\xf3moda opci\xf3n. Si hay que usar npm (o cualquier cosa para la que haya que correr comandos en una terminal) yo recomendar\xeda trabajar todo localmente y despu\xe9s subirlo en un .zip, el resultado es realmente el mismo. Es m\xe1s, aws lo descomprime s\xf3lo y te lo muestra en el editor que les dec\xeda!"),Object(s.b)("li",{parentName:"ul"},'Ahora, la cosa se complica un poco para agregar los triggers. Hay que aprender a usar API gateway (oooootro servicio m\xe1s de aws) que te permite crear una API rest y asignarle una lambda a cada endpoint. Cada endpoint requiere un poco de configuraci\xf3n pero nada del otro mundo. Si habilitas la opci\xf3n de que las requests pasen por un proxy que tiene aws por ah\xed dando vueltas te ahorr\xe1s un mont\xf3n de trabajo en cuanto a configs. Sobre todo por que si no habr\xeda que configurar cada param de la URL (si es que la ruta los tiene) y ni hablar los query strings. Habilitando el proxy le llega todo "parseado" al event de la funcion y listo para ser usado.'),Object(s.b)("li",{parentName:"ul"},"Para incluir paquetes y dem\xe1s, es como ya les hab\xeda contado antes con el framework, ni un drama. El deploy de la lambda se hace por separado del de la API, osea, funcionan independientemente as\xed que hay que asegurarse de que ambos est\xe9n funcionando en simult\xe1neo.\nRealmente no me pareci\xf3 tan complicado una vez que encontr\xe9 las partes juuustas en la documentaci\xf3n. Peeero tambi\xe9n entiendo que hay un mont\xf3n de herramientas y configuraciones que estoy dejando de lado. Con lo que aprend\xed, con o sin el serverless framework, se puede hacer el servicio de mailing muy tranquilamente.\nDe todos modos creo que hay varias cosas que estar\xeda copado que juani nos las explique para optimizar la API y no consumir recursos al pedo.\nTambi\xe9n me queda pendiente hacer las cosas con typescript. Estar\xeda bueno hacerlas, luego transpilarlo y subir eso.")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"}," SERVERLESS FRAMEWORK O NO? ")),Object(s.b)("p",null,"EL resultado despu\xe9s de hacer el deploy con el framework o subiendo un zip es EXACTAMENTE el mismo en cuanto a la estructura de la lambda, as\xed que por ese lado no se consumen recursos adicionales. Ahora, una REEE ventaja que le encontr\xe9 al framework es que ya directamente en el yml pod\xe9s configurar los triggers y los endpoints. Osea, cuando hac\xe9s el deploy de la lambda con sls (serverless frmwrk) tambi\xe9n se genera auntom\xe1ticamente una API con API gateway que encima usa el proxy de aws. En este sentido realmente se ahorra una buena cantidad de tiempo. Lo que no se es si de esta manera queda algo mal configurado o perd\xe9s algunas funcionalidades. Eso es lo que estar\xeda bueno preguntarle a JUANI."))}u.isMDXComponent=!0},123:function(e,a,n){"use strict";n.d(a,"a",(function(){return d})),n.d(a,"b",(function(){return b}));var o=n(0),r=n.n(o);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,o,r=function(e,a){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var a=r.a.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):l({},a,{},e)),n},d=function(e){var a=u(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},m=Object(o.forwardRef)((function(e,a){var n=e.components,o=e.mdxType,s=e.originalType,t=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,b=d["".concat(t,".").concat(m)]||d[m]||p[m]||s;return n?r.a.createElement(b,l({ref:a},c,{components:n})):r.a.createElement(b,l({ref:a},c))}));function b(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var s=n.length,t=new Array(s);t[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,t[1]=l;for(var c=2;c<s;c++)t[c]=n[c];return r.a.createElement.apply(null,t)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);